networks:
  button-network:
    driver: bridge

services:
  buttonshop:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ELASTICSEARCH__ADDRESS: "http://elasticsearch:9200"
      OPENTELEMETRY__ENDPOINT: "http://otel:4317"
    ports:
      - "5080:5080"
    networks:
      - button-network
  grafana:
    image: grafana/grafana:${GRAFANA_TAG:-11.5.2}
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
      - elasticsearch
      - loki
      - tempo
    ports:
      - 3000:3000
    networks:
      - button-network
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-grafana}
      - GF_DISCORD_WEBHOOK_URL=${GF_DISCORD_WEBHOOK_URL:-https://discord.com/api/webhooks/your-channel-id/token}
    volumes:
      - ../infra/grafana/datasources:/etc/grafana/provisioning/datasources
      - ../infra/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ../infra/grafana/dashboards:/var/lib/grafana/dashboards
      - ../infra/grafana/provisioning/alerting:/etc/grafana/provisioning/alerting
  prometheus:
    image: prom/prometheus:${PROMETHEUS_TAG:-v3.2.0}
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - button-network
    volumes:
      - ../infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prom_data:/prometheus
  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_TAG:-8.8.0}
    restart: unless-stopped
    container_name: elasticsearch
    networks:
      - button-network
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
  otel:
    image: otel/opentelemetry-collector:${OTEL_TAG:-0.120.0}
    container_name: otel
    restart: unless-stopped
    environment:
      - OTEL_LOG_LEVEL=debug
    command: --config=/etc/otel-collector-config.yml
    volumes:
      - ../infra/otel/otel-collector-config.yml:/etc/otel-collector-config.yml
    networks:
      - button-network
    extra_hosts:
      - host.docker.internal:host-gateway
  loki:
    image: grafana/loki:${LOKI_TAG:-3.4}
    container_name: loki
    restart: unless-stopped
    environment:
      - ALLOW_STRUCTURED_METADATA=true
    networks:
      - button-network
  tempo:
    image: grafana/tempo:${TEMPO_TAG:-main-6951cf6}
    container_name: tempo
    restart: unless-stopped
    volumes:
      - ../infra/tempo/tempo-config.yaml:/etc/tempo-config.yaml
      #- ./tempo-data:/tmp/tempo
    command: [ "-config.file=/etc/tempo-config.yaml" ]
    networks:
      - button-network

volumes:
  prom_data:
  elastic_data: